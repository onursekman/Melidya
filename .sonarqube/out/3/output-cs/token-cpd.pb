¡	
hC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Controllers\CategoryController.cs
	namespace

 	
Melidya


 
.

 !
MicroservicesProductt

 '
.

' (
Api

( +
.

+ ,
Controllers

, 7
{ 
[ 
Route 

(
 
$str &
)& '
]' (
[ 
ApiController 
] 
public 

class 
CategoryController #
:$ %
ControllerBase& 4
{ 

Repository 
< 
Category 
> 
repo !
=" #
new$ '

Repository( 2
<2 3
Category3 ;
>; <
(< =
)= >
;> ?
[ 	
HttpGet	 
] 
public 
List 
< 
Category 
> 
GetCategories +
(+ ,
), -
{ 	
return 
repo 
. 
List 
( 
) 
; 
} 	
} 
} •	
gC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Controllers\ContactController.cs
	namespace

 	
Melidya


 
.

 !
MicroservicesProductt

 '
.

' (
Api

( +
.

+ ,
Controllers

, 7
{ 
[ 
Route 

(
 
$str &
)& '
]' (
[ 
ApiController 
] 
public 

class 
ContactController "
:# $
ControllerBase% 3
{ 

Repository 
< 
Message 
> 
repo  
=! "
new# &

Repository' 1
<1 2
Message2 9
>9 :
(: ;
); <
;< =
[ 	
HttpPost	 
] 
public 
void 
SendMessage 
(  
Message  '
message( /
)/ 0
{ 	
repo 
. 
Insert 
( 
message 
)  
;  !
} 	
} 
} ê
hC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Controllers\ProducttController.cs
	namespace

 	
Melidya


 
.

 !
MicroservicesProductt

 '
.

' (
Api

( +
.

+ ,
Controllers

, 7
{ 
[ 
Route 

(
 
$str &
)& '
]' (
[ 
ApiController 
] 
public 

class 
ProducttController #
:$ %
ControllerBase& 4
{ 

Repository 
< 
Product 
> 
repo  
=! "
new# &

Repository' 1
<1 2
Product2 9
>9 :
(: ;
); <
;< =
[ 	
HttpGet	 
] 
public 
List 
< 
Product 
> 
GetProducts (
(( )
int) ,
id- /
)/ 0
{ 	
return 
repo 
. 
List 
( 
x 
=>  
x  !
.! "

CategoryID" ,
==, .
id. 0
)0 1
;1 2
} 	
[ 	
HttpGet	 
] 
public 
Product 
GetProductDetail '
(' (
int( +
id, .
). /
{ 	
return 
repo 
. 
Find 
( 
x 
=> !
x" #
.# $
ID$ &
==' )
id* ,
), -
;- .
} 	
} 
} ÿ
fC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Controllers\ValuesController.cs
	namespace 	
Melidya
 
. 
Microservices 
.  
Product  '
.' (
Api( +
.+ ,
Controllers, 7
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
ValuesController !
:" #
ControllerBase$ 2
{ 
[ 	
HttpGet	 
] 
public 
ActionResult 
< 
IEnumerable '
<' (
string( .
>. /
>/ 0
Get1 4
(4 5
)5 6
{ 	
return 
new 
string 
[ 
] 
{  !
$str" *
,* +
$str, 4
}5 6
;6 7
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
ActionResult 
< 
string "
>" #
Get$ '
(' (
int( +
id, .
). /
{ 	
return 
$str 
; 
} 	
[ 	
HttpPost	 
] 
public 
void 
Post 
( 
[ 
FromBody "
]" #
string$ *
value+ 0
)0 1
{ 	
} 	
["" 	
HttpPut""	 
("" 
$str"" 
)"" 
]"" 
public## 
void## 
Put## 
(## 
int## 
id## 
,## 
[##  !
FromBody##! )
]##) *
string##+ 1
value##2 7
)##7 8
{$$ 	
}%% 	
[(( 	

HttpDelete((	 
((( 
$str(( 
)(( 
](( 
public)) 
void)) 
Delete)) 
()) 
int)) 
id)) !
)))! "
{** 	
}++ 	
},, 
}-- à	
QC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Program.cs
	namespace 	
Melidya
 
. 
Microservices 
.  
Product  '
.' (
Api( +
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	 
CreateWebHostBuilder  
(  !
args! %
)% &
.& '
Build' ,
(, -
)- .
.. /
Run/ 2
(2 3
)3 4
;4 5
} 	
public 
static 
IWebHostBuilder % 
CreateWebHostBuilder& :
(: ;
string; A
[A B
]B C
argsD H
)H I
=>J L
WebHost 
.  
CreateDefaultBuilder (
(( )
args) -
)- .
. 

UseStartup 
< 
Startup #
># $
($ %
)% &
;& '
} 
} ƒ
QC:\Users\onurs\source\repos\Melidya2\Melidya.Microservices.Product.Api\Startup.cs
	namespace 	
Melidya
 
. 
Microservices 
.  
Product  '
.' (
Api( +
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddSwaggerGen "
(" #
c# $
=>% '
{ 
c 
. 

SwaggerDoc 
( 
$str !
,! "
new# &
Info' +
{, -
Title. 3
=4 5
$str6 ?
,? @
VersionA H
=I J
$strK O
}P Q
)Q R
;R S
}   
)   
;   
services!! 
.!! 
AddMvc!! 
(!! 
)!! 
.!! #
SetCompatibilityVersion!! 5
(!!5 6 
CompatibilityVersion!!6 J
.!!J K
Version_2_2!!K V
)!!V W
;!!W X
}"" 	
public%% 
void%% 
	Configure%% 
(%% 
IApplicationBuilder%% 1
app%%2 5
,%%5 6
IHostingEnvironment%%7 J
env%%K N
)%%N O
{&& 	
if'' 
('' 
env'' 
.'' 
IsDevelopment'' !
(''! "
)''" #
)''# $
{(( 
app)) 
.)) %
UseDeveloperExceptionPage)) -
())- .
))). /
;))/ 0
}** 
else++ 
{,, 
app.. 
... 
UseHsts.. 
(.. 
).. 
;.. 
}// 
app00 
.00 

UseSwagger00 
(00 
)00 
;00 
app11 
.11 
UseSwaggerUI11 
(11 
c11 
=>11 !
{22 
c33 
.33 
SwaggerEndpoint33 !
(33! "
$str33" <
,33< =
$str33> K
)33K L
;33L M
}44 
)44 
;44 
app55 
.55 
UseHttpsRedirection55 #
(55# $
)55$ %
;55% &
app66 
.66 
UseMvc66 
(66 
)66 
;66 
}77 	
}88 
}99 